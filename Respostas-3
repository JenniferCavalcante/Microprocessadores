Data: 22/03/2017

1. Dada uma variável 'a' do tipo 'char' (um byte), escreva os trechos de código em C para:
	(a) Somente setar o bit menos significativo de 'a'.
	(b) Somente setar dois bits de 'a': o menos significativo e o segundo menos significativo.
	(c) Somente zerar o terceiro bit menos significativo de 'a'.
	(d) Somente zerar o terceiro e o quarto bits menos significativo de 'a'.
	(e) Somente inverter o bit mais significativo de 'a'.
	(f) Inverter o nibble mais significativo de 'a', e setar o nibble menos significativo de 'a'. 

2. Considerando a placa Launchpad do MSP430, escreva o código em C para piscar os dois LEDs ininterruptamente.

3. Considerando a placa Launchpad do MSP430, escreva o código em C para piscar duas vezes os dois LEDs sempre que o usuário pressionar o botão.

4. Considerando a placa Launchpad do MSP430, faça uma função em C que pisca os dois LEDs uma vez.

5. Reescreva o código da questão 2 usando a função da questão 4.

6. Reescreva o código da questão 3 usando a função da questão 4.

RESPOSTAS:

1)
a) a = a | 0x01;
b)a = a | 0x03;
c)a = a & 0x04;
d)a = a & 0x0C;
e)a = a ^ 0x80;
f)a = a ^ 0xF0;
  a = a | 0x0F;
  
2)
#include<msp430g2553.h>
	#define LED1 BIT0
	#define LED2 BIT6

	void main(void)
	{
		WDTCTL = WDTPW|WDTHOLD; //Desativa Watchdog Timer
		P1DIR = LED1 + LED2;    //Configura os pinos 0 e 6 como saída: 0100 0001
		P1OUT = LED1 + LED2;    //Seta os pinos 0 e 6 para nível alto Vcc
		for(;;){
			} //Loop infinito para os LEDS não se apagarem.
		
	}
  
  3)
  #include<msp430g2553.h>
	#define BTN  BIT3 //Seta BTN para 0b00001000
	#define LED1 BIT0
	#define LED2 BIT6

	void main(void)
	{
		WDTCTL = WDTPW|WDTHOLD; //Desativa Watchdog Timer
		P1OUT = 0; //Começar com os LEDs desligados
		P1DIR = LED1 + LED2;    //Configura os pinos 0 e 6 como saída e o restante como entrada: 0100 0001
		

		for(;;){

			if( P1IN & BTN == 0 ){ // Botão pressionado -> 0
				      // P1IN xxxx xxxx
				      //&BTN  0000 1000
				      //      0000 x000 ->Botão pressionado quando x = 0

			P1OUT = LED1 + LED2;    //Seta os pinos 0 e 6 para nível alto Vcc
			P1OUT = ~(LED1+LED2);   //Seta os pinos 0 e 6 para nível baixo, desligando os LEDS.
			P1OUT = LED1 + LED2;    //Seta os pinos 0 e 6 para nível alto Vcc
			P1OUT = ~(LED1+LED2);   //Seta os pinos 0 e 6 para nível baixo, desligando os LEDS.
		  else
			P1OUT = 0;
				     }
			
		
			} //Loop infinito para não sair do programa.
		
	}
  
  4)
  
  #include<msp430g2553.h>
	#define BTN  BIT3 //Seta BTN para 0b00001000
	#define LED1 BIT0
	#define LED2 BIT6

	void piscar(void)
	{
		P1OUT = 0; //Começar com os LEDs desligados
		P1DIR = LED1 + LED2;    //Configura os pinos 0 e 6 como saída e o restante como entrada: 0100 0001
		P1OUT = LED1 + LED2;    //Seta os pinos 0 e 6 para nível alto Vcc
		P1OUT = ~(LED1+LED2);   //Seta os pinos 0 e 6 para nível baixo, desligando os LEDS.
				
	}
  
  5)
  
  #include<msp430g2553.h>
	#define LED1 BIT0
	#define LED2 BIT6

	void main(void)
	{
		WDTCTL = WDTPW|WDTHOLD; //Desativa Watchdog Timer
		piscar();
		for(;;){
			} //Loop infinito para os LEDS não se apagarem.
		
	}
  
  6)
  
  #include<msp430g2553.h>
	#define BTN  BIT3 //Seta BTN para 0b00001000
	#define LED1 BIT0
	#define LED2 BIT6

	void main(void)
	{
		WDTCTL = WDTPW|WDTHOLD; //Desativa Watchdog Timer
			

		for(;;){

			if( P1IN & BTN == 0 ){ // Botão pressionado -> 0
				      // P1IN xxxx xxxx
				      //&BTN  0000 1000
				      //      0000 x000 ->Botão pressionado quando x = 0

				piscar();
				piscar();
		  
			else
				P1OUT = 0;
				     }
			
		
			} //Loop infinito para não sair do programa.
		
	}
  
  
